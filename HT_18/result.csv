by*descendants*id*kids*score*text*time*title*type*url
hkh*5*30086789*30087885, 30087927, 30087800, 30086801*39*Hi, we’re Ali, Hassan and Alistair, co-founders of Infracost (https://www.infracost.io/). Infracost shows engineers the cost of each Terraform change in CI/CD before resources are launched. When something changes, it posts a comment with the cloud cost impact. e.g. you’ve added 2 instances and volumes, and have changed an instance type from medium to large, this will increase your bill by 25% next month from $1000 to $1250 per month.We launched the first version of Infracost just under a year ago (https://news.ycombinator.com/item?id=26064588). As we said in our first release ‘the people who are purchasing cloud resources are not shown costs upfront, so they don’t know how much the resources will cost before launching them’. Our assumption was that because we are open source and engineers are flying blind, they (the engineers) would pull us into their workflow. Actually, something different is happening:The engineers are not pulling us in - it turns out to be the senior DevOps, SREs and platform teams. One of their challenges is figuring out how their small team of 7 people can fulfill the infrastructure requirements of hundreds of engineers. To solve this, they have created and put in place processes for engineers to provision infrastructure when they need. Now they want to implement cost policies and guardrails so that these hundreds of engineers don’t blow past all budgets. For example, if a change will result in a higher than 15% increase, leave a warning. If a change results in a &gt;25% increase in costs, block the change till a team lead has reviewed it.This has two implications for us. First, we need to create an output that isn’t only used by humans but is also digested into other systems to make further decisions. The second is the people we have been speaking to are not our end users. We need to figure out how we can get introduced to our end users, and create a different set of questions for each persona.We’d really love your feedback around the cost policies use-case. We've created examples with standard policy tools like Open Policy Agent (OPA), HashiCorp Sentinel and Conftest.  Check out the repo for GitHub Actions at https://github.com/infracost/infracost. Our other CI/CD integrations are listed here: https://www.infracost.io/docs/#4-add-to-cicd.We'd love to hear how you think about policies and guardrails for containing cloud costs!*1643211599*Show HN: Infracost (YC W21) – Open-source cloud cost policies*story*https://github.com/infracost/infracost
ajusa*16*30085760*30087007, 30086083, 30087380, 30085807, 30086516, 30086870, 30086470, 30086082, 30085947*47* *1643207207*Show HN: A simple Wordle clone in 60 lines, using Hyperscript*story*https://arhamjain.com/hyperwordle/
dmoura*13*30074787*30085675, 30086975, 30086953, 30085552, 30086655, 30086284, 30086285, 30085665*62*"SPyQL (https://github.com/dcmoura/spyql) is SQL with Python in the middle, an open-source project fully written in Python for making command-line data processing more intuitive, readable and powerful. Try mixing in the same pot: a SQL SELECT for providing the structure, Python expressions for defining transformations and conditions, the essence of awk as a data-processing language, and the JSON handling capabilities of jq.How does a SPyQL query looks like?  $ spyql “
    IMPORT pendulum AS p 
    SELECT
        (p.now() - p.from_timestamp(purchase_ts)).in_days() AS days_ago,
        sum_agg(price * quantity) AS total
    FROM csv
    WHERE department.upper() == 'IT' and purchase_ts is not Null
    GROUP BY 1
    ORDER BY 1
    TO json” &lt; my_purchases.csv

In a single statement we are 1) reading a CSV (of purchases) with automatic header detection, dialect detection, type inference and casting, 2) filtering out records that do not belong to the IT department or do not have a purchase timestamp 3) summing the total purchases and grouping by how many days ago they happened, 4) sorting from the most to the least recent day and 5) writing the result in JSON format. All this without loading the full dataset into memory.The Readme is loaded with recipes and there is also a demo video: https://vimeo.com/danielcmoura/spyqldemoAny feedback is welcomed! Thank you."*1643131798*Show HN: SPyQL – SQL with Python in the middle*story*https://github.com/dcmoura/spyql
dfeehrer*8*30086420*30088085, 30087608, 30087588, 30086807, 30086474*17*Hey HN,I've spent a lot of time over the years building mockups and demo videos for my apps with tools like Photoshop and After Effects, always frustrated by how tedious it was.For the past year and a half, I've been working on building a better way.MockRocket makes it easy to show off your app, right from your web browser–no experience required. Choose a template, drag and drop a screenshot or video and display it on a realistic 3D device model. You can even animate it to create a video.You can customize as much or as little as you want, and export in up to 4K resolution. All rendering is done in the browser, not on a server–using WebGL and WebAssembly–so your imported designs stay 100% private.This is the first release! Please let me know if you have any feedback or questions!*1643209909*Show HN: MockRocket – 3D app mockups and animations in the browser*story*https://mockrocket.io
mpaal*3*30086357*30086590*5*Hey HN check this really cool worlde-inspired project of a friend of mine. :)*1643209641*Show HN: Mathle – Wordle for Math People*story*https://mathle.bykiru.rocks/?ref=HN
formkiqmike*6*30085702*30086585*5*Hi people,I've been working on this API for sometime now and I thought others might find it interesting.The API is available on rapidapi @ https://rapidapi.com/formkiq/api/24hourchartsThis API allows you create bar/line/pie/etc charts in a single API call. The only required fields are the type of chart and a list of data points to chart.There are many ways to create charts, but I've found most charting solutions only work inside the application they are created in. I was looking for a solution that allows me to use/create/share charts however I want easily.In the future I really want to focus on being able to simply integrate with other service like notion.There's a free plan that allows you to make 100 requests per day.Hope you'll find it useful. Let me know if you have any comments or features for me to add next.*1643206955*Show HN: API to generate charts in PNG/SVG/HTML*story* 
dstpierre*1*30084822*30084838*2* *1643201244*Show HN: Vivid.fm – Automatically creates clips from podcast*story*https://vivid.fm
KoftaBob*5*30084305*30086110, 30084633*2* *1643197089*Show HN: Wordle Spoiler – When You Just Want the Answer*story*https://www.wordlespoiler.com/
vaibhavantil2*0*30083769* *2* *1643192454*Show HN: Repository of Data SDKs Collect, for Play Store Data Safety Form*story*https://github.com/Privado-Inc/SDK-Privacy-Report
EthanLannan*16*30074204*30075033, 30074865, 30075078, 30078368, 30079511, 30074891, 30074205, 30075771, 30076669*34*This platform is an experimental social network solely based on soundclips. SONAR is meant to encourage genuine conversation and entertainment. I believe audio culture in the form of this app could create a community that is safe, smart, and more human than many of the current social media platforms.*1643129702*Show HN: My new platform. Check it out*story*https://www.sonarmobileapp.com
anr13*123*30066184*30066218, 30066615, 30071263, 30066517, 30066333, 30066635, 30066476, 30083856, 30068813, 30071207, 30066471, 30071968, 30066421, 30066332, 30066483, 30066840, 30066185, 30078308, 30066456, 30066224, 30067184, 30066330, 30066429, 30066214, 30066316, 30071685, 30071544, 30067621, 30066346, 30066467, 30066881*132* *1643070336*Show HN: Social network that looks and works more like a forum*story*https://hey.cafe
xvello*78*30057442*30059212, 30060845, 30060350, 30066417, 30066976, 30065301, 30065444, 30058708, 30064361, 30065460, 30060122, 30064736, 30060764, 30057566, 30058966, 30058841, 30062254, 30066085, 30064457, 30065633, 30062025, 30059664, 30059622*259*uBlock Origin is more than an ad-blocker, it's a general purpose content filter that can be leveraged to hide low-quality content from pages you browse. While the main filter lists can remove mailing list popups and obvious nags, the definition of low-quality content is personal, so one size cannot fit all.I used to have an ad-hoc script to render and publish a personal uBlock Origin filter list, added to all my browsers. The goal of this project is to enable more people to build such a list custom list to filter out low-quality content and nags. Chose from a list of community-maintained templates, set your options, add your custom rules, and get your personal filter list.Code and content are licensed under the Apache 2.0 license and hosted on https://github.com/xvello/letsblockit. The project is still pretty young and needs more filter templates, and lots of frontend improvements (my last web project was in 2005, this is not my forte). Any feedback is welcome!*1643031675*Show HN: Let's Block It – Custom uBlock Origin Filters Made Easy*story*https://letsblock.it/
zapstar*22*30057618*30058037, 30071865, 30063149, 30063396, 30061928, 30064797, 30064089, 30059174*56* *1643032908*Show HN: HomeownerLog – For tracking the tasks you complete around the house*story*https://homeownerlog.com/
jabo*0*30086410* *3* *1643209869*Show HN: Search xkcd Comics by Topic*story*https://xkcd-search.typesense.org/
rixed*5*30079723*30082359*4*Datasino is a command line tool that can come handy when load testing a service or database.Give it a data schema (many compound types supported, including recursive types), an encoding (JSON, CSV or ClickHouse) and a target (a file or a Kafka partition) and a data rate and it will generate a reasonably optimized (native code) random data source.See the top of the README for some examples.If you have any ideas on how to extend this tool so that it's useful to more people, please let me know.*1643153936*Show HN: Random Data Generator for arbitrary data types*story*https://github.com/rixed/datasino
rezonant*5*30061181*30061258, 30062512, 30069982, 30068765*38* *1643046649*Show HN: A powerful bitstream library for TypeScript*story*https://github.com/astronautlabs/bitstream
vbhat161*13*30061911*30069910, 30064571, 30063474, 30062005, 30063757, 30063725*31* *1643049504*Show HN: Create simple yet elegant Web Resumes for free*story*https://swiftcv.com
visualpython*2*30081740*30082662*3* *1643171511*Show HN: Visual Python 2.0 – GUI Python code generator for data science*story*https://visualpython.ai/installation
kraenhansen*6*30076623*30076721, 30078179, 30079340*4* *1643138357*Show HN: Run NPM Scripts with .envs*story*https://www.npmjs.com/package/dotenv-run-script
akmittal*1*30081326*30081389, 30081378*2* *1643167876*Show HN: Convert image below a particular filesize online*story*https://www.webutils.app/compress-image-to/50kb
dm03514*2*30064570*30082342*10*Hello! I just published a book on Site Reliability Engineering.https://www.amazon.com/dp/B09QNZC2LLThis book is a collection of 28 chapters on SRE concepts, such as observability, monitoring, Service Level Objectives (SLOs), alerting, resilience and debugging.I adapted each chapter from blog posts I've written over the last 4 years.Most of the chapters detailed concepts that I applied while working at $dayjob, so they are 100% proven in real business settings :)------Some info on the backstory. Last year I started writing a book on my software development methodology. I put in ~80 hours and am ~25% done. I began getting discouraged and I wanted the practice of actually shipping an entire book from start to finish. I took 28 blog posts and combined them to create this book. I put in ~20 hours editing the book myself. I'm really happy to have this experience and am looking forward to resuming my other book.I used leanpub to generate the pdf and epubs. Leanpub has its own markdown flavor called markua. I was originally drawn to leanpub because it has a pretty popular tech listing website. I didn't actually list on leanpub because they only pay using paypal, so I listed on amazon KDP instead.Thank you!*1643061083*Show HN: I wrote a book on Site Reliability Engineering*story* 
vmihailenco*0*30069620* *8*Uptrace adds support for exceptions, in-app logs, basic users and projects management.*1643099821*Show HN: Tracing Using OpenTelemetry and ClickHouse*story*https://github.com/uptrace/uptrace/blob/master/CHANGELOG.md
octobereleven*11*30071791*30074481, 30073448, 30074589, 30073327, 30071798*17* *1643119025*Show HN: Blogstatic.io – Blogging and Sending Newsletters from a single platform*story*https://blogstatic.io/
moergo*12*30074568*30076071, 30074674, 30077927, 30077002, 30074795, 30076248, 30075358*35* *1643131057*Show HN: Glove80 on Kickstarter-500 iterations to make split contoured keyboards*story*https://www.kickstarter.com/projects/moergo/glove80-the-incredibly-comfortable-ergonomic-keyboard
s-xyz*45*30070369*30070483, 30070926, 30070904, 30070969, 30080704, 30072020, 30071228, 30071451, 30072435, 30070837, 30070762, 30071756, 30070773, 30080935, 30070778, 30072284, 30071199, 30071249, 30070979, 30070752, 30070764, 30071013, 30071015, 30070974*27* *1643107406*Show HN: Do I need an umbrella today?*story*https://umbrellatoday.app
pzubkiewicz*5*30070145*30070680, 30070146*7* *1643104872*Show HN: CloudPouch – See. Understand. Reduce AWS Costs*story*https://cloudpouch.dev
moderatorium*0*30075732* *2*hello all! here's a link to my little pinteresting like forum that stores no data on the server and uses IPFS for image storage.The design aesthetic is that everything would in 64kb of memory so we're going for a collapse-proof low bandwidth experience. this makes moderator really fast.https://moderator.rocks is the web preview, a flutter client is in the works at https://github.com/hoodownr/atacamatake a look, post something fun, ask questions.I'm also on twitter @moderatorium in case interested. Have fun!*1643135006*Show HN: Moderator,lightweight peer4peer anon forum*story* 
Kvirkvelia*4*30059214*30086916, 30072124*7* *1643039878*Show HN: Toola – the open-source Retool alternative*story*https://github.com/Toola-bakery/Toola
finishprobation*0*30071033* *4*Hey HN,I made FinishProbation.com to help people who have to take UAs everyday. It's an app that helps people complete their probation sentence. The app will notify you when you need to take a drug test (supporting over 20 states) and includes a probation progression tracker.My first experience with probation was when I was eighteen. My best friend's life was turned upside down by his marijuana possession charge. This charge would not have been as severe in today's times, but the punishment ruined his educational future and his emotional stability. He felt that he was trapped in a disorganized cycle and it was hard for him to see the end.This would later drive me on a mission to code FinishProbation for offenders like my buddy who was overwhelmed by his probation sentence. To reduce the mental stress and toll that probation brings. And this is done by reducing the fear of missing a drug test with notifications, seeing the days left to finish probation and spreading the word on how to get early termination.This app has helped the mental state of being on probation already a few people in Michigan and I trying to see if it can be adopted in courts across America.I believe if this gets adopted in the courts, then it leaves room for other ways for code to innovate our courts and outdated government process like a newly wed changing their last name. (don't get me started on my wife's journey through that)There's so much that can be updated with better processes in this world. If someone's head is on fire, and you hand them a brick, they will use a brick to put out that fire. So let's stop using bricks!Jules*1643113696*Show HN: Can code change our probation system?*story*https://finishprobation.com/?a=web1
geekrodion*0*30070185* *5*Hey folks!I track time for 4 years already...Usually, remote work isn't demanding when for an engineer in a non-early stage startup. When you like your job and are excited about career growth, putting in extra hours can payout.But for some folks working enough hours and doing something on the side could be a better strategy. When you think of time as an investment, you may distribute it properly between a day job, side projects, and hobbies.How do you think of your time in the era of flexible work? Do you treat it as an investment, or do you go with a flow?P.S. If you entertain an idea of allocating and tracking time, you may try it with https://increaser.org*1643105371*Show HN: Remote Work and Free Time*story*https://increaser.org
somishere*1*30070043*30070050*2* *1643103822*Show HN: Re:places (Algolia Places) – faster in-memory search of 41,000 cities*story*https://theprojectsomething.github.io/re.places/
jollyrosso*1*30060267*30063650*7* *1643043239*Show HN: Papertag – The paper-to-digital bookmark app*story*https://www.papertag.app/
m10k*2*30067708*30068071*2*Everyday, I have to deal with Bash scripts and all the code duplication and unreadableness that comes with it. One day I found myself implementing an include function so that I could easily modularize my scripts, and it worked better than I had anticipated. That's how toolbox started.At first, I wrote some simple modules for command line parsing and locking, but then I tried to see how far I could push the poor shell. I wrote modules for semaphores and &quot;thread&quot;-safe queues, and this is where things quickly started to escalate. To implement a distributed build system that automates packaging/signing/publishing of toolbox Debian packages, I wrote a module for message-based IPC that supports point-to-point and pub-sub communication. Performance was never a consideration, but it works really well without consuming excessive resources.Some of the modules are arguably serious abuse of the shell, but I found that toolbox makes it possible to write Bash scripts that are readable, testable, and reliable. Shell isn't a terribly nice language, but it's great for integrating and automating things, so I thought others might find this useful, too.(I am going to publish the build system as well, as soon as I am done writing the documentation.)*1643082495*Show HN: Toolbox – A framework for modular Bash scripts*story*https://m10k.eu/toolbox.html
rueian*0*30066739* *3* *1643074571*Show HN: A new high performance Golang Redis library*story*https://github.com/rueian/rueidis
Sean-Der*1*30063202*30063293*2* *1643054643*Show HN: WebRTC Bandwidth Estimation. Send pre-recorded in multiple levels*story*https://github.com/pion/webrtc/tree/master/examples/bandwidth-estimation-from-disk
crylonblue*0*30061141* *4* *1643046485*Show HN: Verifycoin.io Expert Opinions on Crypto-Projects*story*https://verifycoin.io
Troof*4*30060119*30060955, 30066991*15* *1643042676*Show HN: Nootroflix – A Nootropics Recommender System*story*https://www.nootroflix.com/
trzy*0*30076740* *2*I built a complete game using Snap's AR platform in about 6 weeks. I'd been intrigued by Snap's AR ambitions and wanted to kick the tires on their platform.The YouTube video description contains a link to the Lens: https://lens.snapchat.com/d04efc6953fd498c87e25c92fef727e7?s...How to play:- Joypad y axis moves the helicopter along the ray pointing from the camera. You can therefore tilt the phone up to fly &quot;up&quot;.- Altitude is also controlled by aiming the phone. The helicopter tries to match the altitude of a point that is fixed in front of the camera. So you can move up by aiming up or by actually lifting the phone higher.- Joypad x axis strafes.- If you lose track of the helicopter, a blue arrow will appear after about 5 seconds.- Blow up enemies and try to stay alive :)How it works under the hood:- Loads of JavaScript. Lenses are surprisingly programmer-friendly. As a non-artist, this is great. Almost everything can be driven completely by code, although most creators opt to use pre-made components with minimal scripting.- The game uses a custom physics engine with OBB-based collision detections that I wrote from scratch. Snap now has integrated physics that seem to be based on PhysX (i.e., the same as Unity's) but this was released well into my development process after I had already rolled my own.- I opted not to use environmental mesh reconstruction because it is performance intensive and gives dubious results on lower-end phones. When I started development, it was only enabled for Lidar-based phones but is since available everywhere.- I instead detect horizontal planes using an API that Snap hasn't really documented. I found a snippet of code in their API docs and opened up the Lens Studio .exe to find the names of the other plane events I needed.- Planes are used to create collision boxes that extend to the floor so the helicopter can bump into furniture.- AI-controlled enemy helicopters plot routes using a heightmap generated from the plane data to avoid colliding with obstacles when possible.Takeaways:- This has arguably become my favorite AR prototyping platform. Much faster idea-to-PoC iteration time than anything else out there.- The platform is surprisingly full-featured.- The Lens Studio Editor is remarkably polished and, despite some bugs here and there, is very stable.- The deployment story is second to none. Deploying to the phone involves a single click and is done over the Internet (no need for any tethering or wireless pairing).- Debugging on-device is still challenging (all you can do is log a few lines) but I was assured that an actual debugger is coming soon.- Economic viability: unfortunately, it is not really possible to directly monetize lenses. Most creators contract with brands to create branded lenses.Future plans:- I'll definitely be keeping an eye on Snap's ecosystem.- No plans for any more full-fledged lenses but I do have some ideas for prototypes I'd like to try in anticipation of commercially viable mixed reality HMDs hitting the market soon (e.g., Meta's Project Cambria).- I may update the game with a tutorial mode and a co-located multiplayer mode (co-op play or PvP) provided I get the necessary support from the Snap dev team.Hope you enjoy and are inspired to dive into AR if you haven't already :D*1643138876*Show HN: A full AR helicopter action game built as a Snap lens*story*https://www.youtube.com/watch?v=O_1dJ_x7vXw
ErwinIsolated*0*30086170* *1* *1643208938*Show HN: Graphcommerce.org – open-source React, Next.js e-commerce storefront*story*https://www.graphcommerce.org/
Mr_Modulo*0*30085903* *1* *1643207860*Show HN: Midis2jam2 – MIDI file visualization program*story*https://midis2jam2.xyz/
dougSF70*0*30085816* *1*A few years ago we were running lots of distributed compute jobs and I picked up some high spec mac pro 5.1 that people were selling off in the bay area. I could pick up a 12 core 3+ Ghz with 32 GB of ram unit for about $500. They served their purpose but we started doing other work and they gathered dust. I then had to run some analysis requiring deep GPU enabled compute, with minimal work I was able to convert a 5.1 running macOS to running Ubuntu 20.04 with an NVIDIA card. No doubt Apple fans will find this abhorrent but Apple has discontinued support for the 5.1 yet they are still as powerful as many modern computers. If you want to know how we did it then get in touch.*1643207488*Show HN: Repurposed Mac Pro 5.1 as Deep Learning Computer*story* 
wbespace*0*30085761* *4* *1643207208*Show HN: I built a slack based virtual office*story*https://indieoffices.com/
jimmy2020*0*30084784* *1* *1643200935*Show HN: DFlex JavaScript Project to Manipulate DOM Elements*story*https://github.com/dflex-js/dflex
